<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mall.dao.AccountMapper">
    <resultMap id="BaseResultMap" type="com.mall.model.Account">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <result column="id" jdbcType="INTEGER" property="id"/>
        <result column="account" jdbcType="VARCHAR" property="account"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="nickname" jdbcType="VARCHAR" property="nickname"/>
        <result column="age" jdbcType="INTEGER" property="age"/>
        <result column="state_id" jdbcType="INTEGER" property="stateId"/>
    </resultMap>

    <resultMap id="queryForListMap" type="com.mall.model.Account">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <result column="id" jdbcType="INTEGER" property="id"/>
        <result column="account" jdbcType="VARCHAR" property="account"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="nickname" jdbcType="VARCHAR" property="nickname"/>
        <result column="age" jdbcType="INTEGER" property="age"/>
        <result column="state_id" jdbcType="INTEGER" property="stateId"/>
        <result column="as_state" jdbcType="VARCHAR" property="accountState"/>
        <collection property="userProfiles" javaType="java.util.List" ofType="com.mall.model.UserProfile">
            <result column="up_id" jdbcType="INTEGER" property="id"/>
            <result column="up_type" jdbcType="VARCHAR" property="type"/>
        </collection>
    </resultMap>

    <insert id="insertSelective" parameterType="com.mall.model.Account">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into account
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="account != null">
                account,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="nickname != null">
                nickname,
            </if>
            <if test="age != null">
                age,
            </if>
            <if test="stateId != null">
                state_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="account != null">
                #{account,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="nickname != null">
                #{nickname,jdbcType=VARCHAR},
            </if>
            <if test="age != null">
                #{age,jdbcType=INTEGER},
            </if>
            <if test="stateId != null">
                #{stateId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>

    <select id="getAllUser" resultMap="BaseResultMap">
    SELECT * FROM account
  </select>

    <select id="queryForList" resultMap="queryForListMap">
--         SELECT
--         a.*,aup.account_id up_id,aup.type up_type
--         FROM mall.account a
--         LEFT JOIN
--             (SELECT
--             a.account_id,up.type
--             FROM mall.account_user_profile a
--             LEFT JOIN mall.user_profile up
--             ON a.user_profile_id = up.id) aup
--         ON a.id = aup.account_id

             SELECT aaup.*,mas.state as_state FROM
                (SELECT
                     a.*,aup.account_id up_id,aup.type up_type
                        FROM mall.account a
                        LEFT JOIN
                            (SELECT
                                a.account_id,up.type
                                FROM mall.account_user_profile a
                                    LEFT JOIN mall.user_profile up
                                    ON a.user_profile_id = up.id) aup
                        ON a.id = aup.account_id) aaup
            LEFT join mall.account_state mas
            ON aaup.state_id =mas.id
  </select>

    <select id="findAccountByAccountPwd" resultMap="queryForListMap">
          SELECT aaup.*,mas.state as_state FROM
                (SELECT
                     a.*,aup.account_id up_id,aup.type up_type
                        FROM mall.account a
                        LEFT JOIN
                            (SELECT
                                a.account_id,up.type
                                FROM mall.account_user_profile a
                                    LEFT JOIN mall.user_profile up
                                    ON a.user_profile_id = up.id) aup
                        ON a.id = aup.account_id WHERE a.account=#{account,jdbcType=VARCHAR} AND a.password=#{password,jdbcType=VARCHAR}) aaup
            LEFT join mall.account_state mas
            ON aaup.state_id =mas.id

    </select>
    <select id="findAccountByAccount" resultMap="queryForListMap">
          SELECT aaup.*,mas.state as_state FROM
                (SELECT
                     a.*,aup.account_id up_id,aup.type up_type
                        FROM mall.account a
                        LEFT JOIN
                            (SELECT
                                a.account_id,up.type
                                FROM mall.account_user_profile a
                                    LEFT JOIN mall.user_profile up
                                    ON a.user_profile_id = up.id) aup
                        ON a.id = aup.account_id WHERE a.account=#{account,jdbcType=VARCHAR}) aaup
            LEFT join mall.account_state mas
            ON aaup.state_id =mas.id

    </select>

</mapper>